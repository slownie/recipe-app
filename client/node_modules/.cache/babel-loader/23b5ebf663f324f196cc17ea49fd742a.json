{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nexport const useSignup = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  let navigate = useNavigate();\n  const signup = async (username, password) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('localhost:4000/api/users/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const json = await response.json();\n    console.log(JSON.stringify(json));\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      localStorage.setItem('user', JSON.stringify(json));\n      setIsLoading(false);\n    }\n  };\n  return {\n    signup,\n    isLoading,\n    error\n  };\n};\n_s(useSignup, \"peNtBp1FL4bs6QDEVKkVKHt4cYc=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"names":["useState","useNavigate","useSignup","error","setError","isLoading","setIsLoading","navigate","signup","username","password","response","fetch","method","headers","body","JSON","stringify","json","console","log","ok","localStorage","setItem"],"sources":["C:/Dev/WebDev/MERN/PracticeProjects/RecipeApp/client/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const useSignup = () => {\r\n    const [error,setError] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(null);\r\n    let navigate = useNavigate();\r\n\r\n    const signup = async(username, password) => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n\r\n        const response = await fetch('localhost:4000/api/users/signup', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({ username, password })\r\n        })\r\n        const json = await response.json()\r\n        console.log(JSON.stringify(json))\r\n\r\n        if (!response.ok) {\r\n            setIsLoading(false)\r\n            setError(json.error)\r\n        }\r\n        if (response.ok) {\r\n            localStorage.setItem('user', JSON.stringify(json))\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n    return {signup, isLoading, error}\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;EAC3B,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACvC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAChD,IAAIO,QAAQ,GAAGN,WAAW,EAAE;EAE5B,MAAMO,MAAM,GAAG,OAAMC,QAAQ,EAAEC,QAAQ,KAAK;IACxCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAC5DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,QAAQ;QAAEC;MAAS,CAAC;IAC/C,CAAC,CAAC;IACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,EAAE;IAClCC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;IAEjC,IAAI,CAACP,QAAQ,CAACU,EAAE,EAAE;MACdf,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC;IACxB;IACA,IAAIQ,QAAQ,CAACU,EAAE,EAAE;MACbC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;MAClDZ,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EACD,OAAO;IAACE,MAAM;IAAEH,SAAS;IAAEF;EAAK,CAAC;AACrC,CAAC;AAAA,GA3BYD,SAAS;EAAA,QAGHD,WAAW;AAAA"},"metadata":{},"sourceType":"module"}